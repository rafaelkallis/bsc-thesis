\relax 
\providecommand*\new@tpo@label[2]{}
\citation{KW17}
\citation{KW17}
\citation{GW02}
\citation{TM11}
\@writefile{toc}{\contentsline {section}{\numberline {1}Introduction}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {1.1}Apache Jackrabbit Oak (Oak)}{2}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Apache Jackrabbit Oak's system architecture.\relax }}{2}}
\providecommand*\caption@xref[2]{\@setref\relax\@undefined{#1}}
\newlabel{fig:architecture}{{1}{2}}
\newlabel{fig:architecture@cref}{{[figure][1][]1}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Workload Aware Property Index (WAPI)}{3}}
\newlabel{sec:wapi}{{2}{3}}
\newlabel{sec:wapi@cref}{{[section][2][]2}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.1}Insertion}{3}}
\newlabel{algo:add_triple_wapi}{{1}{3}}
\newlabel{algo:add_triple_wapi@cref}{{[algocfline][1][]1}{3}}
\@writefile{loa}{\contentsline {algocf}{\numberline {1}{\ignorespaces AddTripleWAPI\relax }}{3}}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces  Adding a node in WAPI. \texttt  {/i} is an abbreviation for \texttt  {/index}. Property $\lambda $ denotes the label of a node. \relax }}{3}}
\newlabel{fig:add_wapi}{{2}{3}}
\newlabel{fig:add_wapi@cref}{{[figure][2][]2}{3}}
\citation{CM15}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.2}Querying}{4}}
\newlabel{algo:query_wapi}{{2}{4}}
\newlabel{algo:query_wapi@cref}{{[algocfline][2][]2}{4}}
\@writefile{loa}{\contentsline {algocf}{\numberline {2}{\ignorespaces QueryWAPI\relax }}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces CAS Query example.\relax }}{4}}
\newlabel{fig:cas_query}{{3}{4}}
\newlabel{fig:cas_query@cref}{{[figure][3][]3}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {2.3}Deletion}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces Removing a node from the WAPI. Assume \texttt  {/index/x/1/a/b} (colored red) is volatile in all three snapshots $G^i, G^j, G^k$.\relax }}{5}}
\newlabel{fig:remove_wapi}{{4}{5}}
\newlabel{fig:remove_wapi@cref}{{[figure][4][]4}{5}}
\citation{KW17}
\newlabel{algo:remove_triple_wapi}{{3}{6}}
\newlabel{algo:remove_triple_wapi@cref}{{[algocfline][3][]3}{6}}
\@writefile{loa}{\contentsline {algocf}{\numberline {3}{\ignorespaces RemoveTripleWAPI\relax }}{6}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Volatility}{6}}
\newlabel{sec:volatility}{{3}{6}}
\newlabel{sec:volatility@cref}{{[section][3][]3}{6}}
\newlabel{def:vol_count}{{2}{6}}
\newlabel{def:vol_count@cref}{{[definition][2][]2}{6}}
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces Node \texttt  {/index/x/1/a/b} becomes volatile after a deletion by $T_j$ and insertion by $T_k$. Therefore the node cannot be deleted by transaction $T_l$.\relax }}{7}}
\newlabel{fig:vol_example}{{5}{7}}
\newlabel{fig:vol_example@cref}{{[figure][5][]5}{7}}
\@writefile{toc}{\contentsline {section}{\numberline {4}Implementation}{8}}
\newlabel{sec:implementation}{{4}{8}}
\newlabel{sec:implementation@cref}{{[section][4][]4}{8}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.1}Checking Node Volatility}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces JSON document of an index node.\relax }}{8}}
\newlabel{fig:json_simple}{{6}{8}}
\newlabel{fig:json_simple@cref}{{[figure][6][]6}{8}}
\citation{KW17}
\@writefile{lof}{\contentsline {figure}{\numberline {7}{\ignorespaces Java implementation for detecting volatile index nodes.\relax }}{9}}
\newlabel{fig:is_volatile}{{7}{9}}
\newlabel{fig:is_volatile@cref}{{[figure][7][]7}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2}Document Splitting}{9}}
\newlabel{ex:split_doc}{{6}{9}}
\newlabel{ex:split_doc@cref}{{[example][6][]6}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {8}{\ignorespaces Java implementation for splitting the node document.\relax }}{10}}
\newlabel{fig:split_document}{{8}{10}}
\newlabel{fig:split_document@cref}{{[figure][8][]8}{10}}
\@writefile{lof}{\contentsline {figure}{\numberline {9}{\ignorespaces Document splitting. We use the same parameters as in \Cref  {ex:split_doc}.\relax }}{11}}
\newlabel{fig:split_doc_mongo}{{9}{11}}
\newlabel{fig:split_doc_mongo@cref}{{[figure][9][]9}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {10}{\ignorespaces  Intermediate values of computation while splitting document \texttt  {/index/x/1/a/b} as shown in \Cref  {fig:split_doc_mongo}. We use the same parameters as in \Cref  {ex:split_doc}. \relax }}{11}}
\newlabel{fig:split_doc_debug}{{10}{11}}
\newlabel{fig:split_doc_debug@cref}{{[figure][10][]10}{11}}
\bibstyle{abbrv}
\bibdata{vertiefung}
\bibcite{CM15}{1}
\bibcite{TM11}{2}
\bibcite{GW02}{3}
\bibcite{KW17}{4}
\gdef\minted@oldcachelist{,
  default-pyg-prefix.pygstyle,
  default.pygstyle,
  EB0EDB38F802C7D97A154257802A49055354766D5FF14AE9D356BB18585BF07E.pygtex,
  82A5F3A86B682A412BEA3D7FE66AB85E5354766D5FF14AE9D356BB18585BF07E.pygtex,
  CB0A95A3079D071644DA84B59E5580405354766D5FF14AE9D356BB18585BF07E.pygtex}
\@writefile{toc}{\contentsline {section}{\numberline {5}Appendix}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.1}Helper Functions}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {11}{\ignorespaces Java implementation for helper functions.\relax }}{13}}
\newlabel{fig:helper^functions}{{11}{13}}
\newlabel{fig:helper^functions@cref}{{[figure][11][]11}{13}}
